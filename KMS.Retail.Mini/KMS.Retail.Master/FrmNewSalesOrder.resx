<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSaveOrder.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAZCAYAAAArK+5dAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAABCxJREFUSEvFlWtMW2UYx09iYvSTmmjihEVQdMjcGIUZP3mZ39TED8bEucTEaIwa
        ncw5JYMlMjfYBW25uTlA7ugiTGxaMihaSkvLajmlPb0AHRQ2ejvnUGADRhT29zlnXAasMOIHP/zyvj15
        8/z6f99znpfB/CwKjaN4roTD7jP9SPxKjf11ZtyY4NH6p5HolGnTd0Ld0o7+IT/CgoDRcBiBSEQeI/Tb
        HwzhheNaZJw2A5gH5mYxMzMDpt4Wwj3ZfyG1kEP6mQHEHVLjs1ozpqNh1DQ1o6rxAqolmn5DaXU9uP5+
        RERxhYAnwdBoCC+f0OCR7A68WEZrrk2TZxbMOw39SP7eCUUxh4yzA4inBJ/XWjApBlFQ8RNOlZXjdHmF
        PM9RqcC6PODHxu4o2EOCp741Iuk7Dq9V9YG/Pg1mb/1awYE6C66JASirqqGsrIKKxkIit7gELLdWEBF4
        DNMW7TmpQdJRExSlHjx5yoFXyjxg9q1KEEeCj6qM+Oe6KAvyzv6Ik5RCIkdZiL7LgwgtnMEigiglCOKl
        fC2epgSKUi/Si114MJddJaAzSMhS4/ljWoxERASvDuIPkwEGiwl6GlmHHTNTkxiPChgfF2UmCMxOoKHL
        i8RDjdieLyW4JdiSZ18pUJT2YfsxPeIyz+NVVTt+tw2iZzAM6+WQjGUgAL1zCHpuGaPbj6JWB1K/0SD+
        wHnsUrJUy30ngUsmjdh2pAVb9v+MhC9/RXJWI7Z9HZvkrCbEf/ELthLP5hmgKHHLdWIIKIU0UpI0mu9U
        2rHjLkhV9SJNKkyHu/hHYya4xYJosxQtzzcQ/Hf+X8FOahvSs82QQuwqWt7amIIUlbSIw5s1Xuyt8+Lt
        u6Hei9crPXhG6ZR7WkzBDiqeTsWtvgB9yQLmCGnciPkpAVMTEZwz+ZFU4EAaJVkjkB48mt+Lmu5hYIa+
        Yp5HhHoOH41uSJhaRYgP0xct4o1qz1K9FYKMEhceyLXDeyWEaJSa1+goutleWHrs62K2sbA5OOpPIm5O
        CzjS4kMiNbqYAtdwkAQCBkeuyBdNi64DLe2x0er01KcsCFPaORIc1vqQIAmoXkyBKEbkVhwZE5e24VxF
        BQ7n5KzYmkXCtE7qqvMLAjnBeoLFBDpDF1r1RrR1GPHeBx+CYRh5fjtSSoPZSucgxhL4SOBYJaAzCATQ
        3UNnYKO9XgezlYW114ngokCz6gzeqnQgpdC9JHAPhzBGWyS9RXxUeos2Irp0R9+eIIOa32MnHGDeLTfh
        8TwrdlMnfOi4E56rPKJ0iQR5YVMECNyIIvuiH08UuOV69x5sA9PlC4J5vx4PH9SA+USNRp0Rxi4LdJ3m
        TeOwXcK+Uh3uz9Tivk8vICmrGQxu/g12RMDR5h58XGuFhXXCwbnoeuQ2RQ/h87pR0cYis+ESfmh3gZ+c
        wr+QkwqThzerywAAAABJRU5ErkJggg==
</value>
  </data>
</root>